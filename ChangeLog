2006-01-10  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/videowidget.py (VideoWidget.__slots__) 
	(VideoWidget.__init__, VideoWidget.do_expose_event) 
	(VideoWidget.prepareWindowCb, sizeAllocateCb) 
	(backgroundRealizeCb, VideoWidget.realizeCb, videoEventFilterCb):
	Revamp the video widget to use a single DrawingArea.

2006-01-10  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/mainui.py	(MainUserInterface.alwaysAvailable): Add
	keyboard accelerators and tooltips to many of the actions.

	* src/mainwindow.py (MainWindow.__init__): Install accelerator
	group and add most existing actions as accelerators to the XML
	description. Clean up window construction.
	(MainWindow.videoKeyPress): Arrow keys and return must be handled
	with an event handler instead of using key accelerators.

2006-01-09  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/baseui/uimanager.py (ActionGroup.__init__): Add action
	instances as attributes to the UIManager instead of the action
	groups.

2006-01-08  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/manager.py (Manager.vobuHeader): Also shutdown the
	sound pipeline when no physical audio channel is reported by the
	machine.

2006-01-08  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/mainwindow.py (MainWindow.__slots_, MainWindow.__init__) 
	(MainWindow.performFullScreen, mainKeyPress): Add a toolbar and
	connect some of the actions to it. Remove direct keyboard
	handling.

	* src/mainui.py (MainUserInterface, MainUserInterface.__init__) 
	(MainUserInterface.alwaysAvailable): Convert MainUserInterface
	into an baseui.UIManager and define the main operations as
	actions.

2006-01-08  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/baseui/uimanager.py (ActionGroup.__init__): Create the
	action callbacks as method bound to UIManager. This way, they have
	direct access to the UIManager instance and not to the ActionGroup
	containing the action.
	(UIManager.__init__): Pass self as parameter when creating the
	action groups, so that the callbacks can access the ui manager.

	* src/baseui/actiongroup.py 
	* src/baseui/uimanager.py:
	Consolidate in a single file.

2006-01-08  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/mainwindow.py: 
	* src/mainui.py (MainUserInterface.__slots__) 
	(MainUserInterface.__init__): 
	In preparation for creating an UI manager, create a new class to
	represent the main player window and move all relevant code from
	mainui to it.

2006-01-08  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/seamless.py: 
	(main): Install the _() gettext translation function and mark the
	commandline options' help text for translations.

2006-01-08  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/baseui/uimanager.py: 
	* src/baseui/actiongroup.py: 
	* src/baseui/__init__.py: 
	New package baseui for generic user interface code. For the moment
	it offers a wrapper system for gtk.UIManager and gtk.ActionGroup.

	* src/baseui/Makefile.am: 
	* src/Makefile.am (SUBDIRS): 
	* configure.ac: 
	Install the python files in baseui.

2006-01-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/player.py (DVDPlayer.__init__): 
	* src/mainui.py (MainUserInterface.__init__): 
	Move region setting to the player itself, which receives the
	options object anyway.

2006-01-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/config/__init__.py (__all__): Fix the export line.

2006-01-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* configure.ac: 
	* src/Makefile.am (SUBDIRS): 
	* src/gazpacho:
	Copy the loader package from Gazpacho, so that we can load
	Gazpacho created .glade files.

	* configure.ac: 
	* glade/seamless.glade
	* src/config/__init__.py: 
	* config/config.py.tmpl: 
	* config/Makefile.am (config.py): 
	* Makefile.am (SUBDIRS): 
	Create a new glade file directory and define a configuration
	variable to find its location. Also add a new seamless.glade file
	and setup the compilation system to install it properly.

	* autogen.sh: Pass parameters to configure script.

2006-01-05  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/pipeline.py (Bin.makeParsedSubelem) 
	(SoftwareAudio.__init__, SoftwareVideo.__init__): Interpret the
	video and audiosink descriptions from the command line options as
	parsable pipeline description, thus making it possible to set
	element properties from the command line.

2006-01-05  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/mpeg2sub/gstmpeg2subt.c (COMPARE_GAP)
	(gst_mpeg2subt_update): Allow for an error gap when comparing
	buffer and command block timestamps. Not doing that was causing
	highlights not to be displayed on still frames in certain
	situations.

	(gst_buffer_copy): Send updated highlight frames with the same
	timestamp of the last frame instead of 0. This way the timestamp
	is guaranteed to lie in the current segment.

2006-01-04  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/events.py (newsegment): Set the position to the same
	value as the start time, as suggested by wtay.

2006-01-03  Martin Soto  <martinsoto@users.sourceforge.net>

	* README: Move contents to the webpage, and leave only a
	reference here.

2006-01-03  Martin Soto  <martinsoto@users.sourceforge.net>

	* README: Updated.

2006-01-02  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/player.py (DVDPlayer.pause, DVDPlayer.stop) 
	(DVDPlayer.start): 
	* src/player/pipeline.py (start, forceStop, waitForStop): 
	* src/mainui.py (MainUserInterface.mainKeyPress): 
	Implement a pause operation and make stop more robust.

2006-01-01  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/manager.py (Manager.resendSubpictureClut)
	(Manager.flush): Erase code to resend the color lookup table after
	every flush.

	* gst-plugins/mpeg2sub/gstmpeg2subt.c
	(gst_mpeg2subt_flush_subtitle): Don't reset the color lookup table
	when flushing.

2006-01-01  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/pipeline.py (SoftwareVideo.__init__): 
	Insert a dvdaspect element in the video pipeline.

	* src/player/manager.py (Manager.__slots__, Manager.__init__) 
	(Manager.setAspectRatio): Send video-aspect-set events when aspect
	ratio is changed.

	* src/player/events.py (audio): 

	* gst-plugins/mpeg2sub/gstmpeg2subt.c (gst_mpeg2subt_event_video):
	Forward DVD events down the pipeline instead of simply unrefing
	them.

	* gst-plugins/seamless/seamlessinit.c (plugin_init): 
	* gst-plugins/seamless/Makefile.am (libseamless_la_SOURCES): 
	* gst-plugins/seamless/dvdaspect.c:
	* gst-plugins/seamless/dvdaspect.h: 
	New dvdaspect element, a filter that forces a certain aspect ratio
	on the video frames it receives. The aspect ratio is controlled
	using events.

2006-01-01  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/videowidget.py (VideoWidget.presetAspectRatio): 
	* src/player/player.py (DVDPlayer.getDVDInfo)
	(DVDPlayer.aspectRatioChanged): 
	* src/player/manager.py (Manager, Manager.setAspectRatio) 
	(Manager.aspectRatioChanged): 
	* src/mainui.py (MainUserInterface.__init__):
	Killed the remains of old aspect ratio setting infrastructure.

2005-12-31  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/seamless/seamlessinit.c (plugin_init): 
	* gst-plugins/seamless/dvdblocksrc.c (plugin_init): 
	* gst-plugins/seamless/Makefile.am: 
	* gst-plugins/Makefile.am (SUBDIRS): 
	* configure.ac: 
	dvdblock plugin renamed to seamless, in order to put other
	seamless specific elements in it. init function split to a
	separate file.
	
	* configure.ac: Erased spurious reference to iec958 plugin, which
	had been deleted.
	
2005-12-31  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/manager.py (Manager.flush): Erase spurious audio
	shutdown call.

2005-12-30  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/manager.py (Manager.__slots__, Manager.__init__) 
	(Manager.playVobu, Manager.stillFrame, Manager.flush): Flush the
	pipeline after timed still frames. This guarantees proper A/V sync
	for the material following the still.

2005-12-30  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/manager.py (PushBackIterator, Manager.__slots__)
	(Manager.__init__, Manager.vobuRead, Manager.collectCmds)
	(Manager.runInteractive, Manager.flush): Implement a generic
	iterator with push back functionality, and use it to simplify the
	handling of collected commands. Now, instead of storing commands
	in the pendingCmds attribute, they will be pushed back into the
	stream. Restoring the CLUT after a flush will also be done this
	way.

2005-12-30  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/events.py (audioShutdown, audioRestart): 
	* src/player/manager.py (Manager.__slots__, Manager.__init__) 
	(Manager.vobuHeader, Manager.flush, Manager.shutdownAudio)
	(Manager.restartAudio): Use the async fields in the
	DSI NAV packet, together with the new "audio-shutdown"
	and "audio-restart" DVD events to shutdown and restart the
	audio pipeline as necessary. This fixes a lot of glitches with
	still frames and DVD menus otherwise not having sound, that used
	to hang the pipeline when prerolling after a flush.

	* src/player/manager.py (Manager.vobuRead, Manager.vobuRead)
	(Manager.vobuRead, Manager.vobuHeader, Manager.vobuHeader)
	(Manager.vobuHeader): Move frequent debug messages to the "LOG"
	level.

	* src/dvdread/_dvdread.pyx (getFirstAudioOffset) 
	(getFirstSubpictureOffset): New operations.

2005-12-29  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/dvdblock/dvdblocksrc.c
	(dvdblocksrc_create, dvdblocksrc_do_seek): Fix debugging.

	* gst-plugins/capspipe/capsselect.c (capsselect_event): 
	Forward FLUSH events to all pads.

	* gst-plugins/capspipe/capsaggreg.c (capsaggreg_event): 
	Forward FLUSH events regardless of which pad they came from.

2005-12-28  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/seamless.py (main): 
	* src/player/player.py (DVDPlayer.getRegion, DVDPlayer.getRegion): 
	* src/mainui.py (MainUserInterface.__init__): 
	* src/machine/machine.py (VirtualMachine.setRegion) 
	(VirtualMachine.getRegion): 
	Make it possible to externally set the player's region. Add a
	command line option for this purpose.

2005-12-27  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/pipeline.py (SpdifAudio.__init__) 
	(SoftwareAudio.__init__): Reenable support for LPCM audio.

	* gst-plugins/capspipe/capspipeinit.c: 
	* gst-plugins/capspipe/capsselect.c: 
	* gst-plugins/capspipe/capsaggreg.h: 
	* gst-plugins/capspipe/capsaggreg.c: 
	* gst-plugins/Makefile.am (SUBDIRS): 
	Port capspipe to GStreamer 0.10.

2005-12-27  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/manager.py (Manager.__slots__, Manager.__init__) 
	(Manager.playVobu): Reset the highlight when changing domains.

	* gst-plugins/mpeg2sub/gstmpeg2subt.c
	(gst_mpeg2subt_handle_dvd_event): Completely flush the subtitles
	when a reset-highlight event arrives.

2005-12-27  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/pipeline.py (SpdifAudio.__init__): Limit the SP/DIF
	audio queue by size, as a workaround for an apparent bug that
	causes it, under certain conditions, to swallow unlimited material.

2005-12-26  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/iec958: Erased. This plugin is now available from
	gst-plugins-ugly.

	* src/player/pipeline.py (SpdifAudio.__init__): Reenable direct
	AC3 playback to external decoder.

	* src/player/pipeline.py (MySink): Erase (had been introduced for
	debugging.)

	* src/player/pipeline.py: Clean up import statements.

2005-12-22  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/pipeline.py (Bin.prepareFlush, Bin.closeFlush) 
	(SoftwareVideo.__init__, SoftwareVideo.prepareFlush) 
	(SoftwareVideo.closeFlush, Pipeline.__slots__, Pipeline.__init__) 
	(Pipeline.prepareFlush, Pipeline.closeFlush): Rename pipeline
	audio and video components to audioBin and videoBin. Add
	operations prepareFlush and closeFlush to be invoked before and
	after a flush. In softwareVideo, they increse and shorten the
	length of the frame-queue, to prevent pipeline deadlocks after
	flushing.

	* src/player/manager.py (Manager.__init__) 
	(Manager.flushMsgHandler): Message handler renamed to
	flushMsgHandler, documented and converted to use the
	prepare/closeFlush operations in the pipeline.

2005-12-22  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/mpeg2sub/gstmpeg2subt.h (GST_MPEG2SUBT_LOCK) 
	(GST_MPEG2SUBT_UNLOCK): 
	New macros for acquiring and realising the object's data lock.

	* gst-plugins/mpeg2sub/gstmpeg2subt.c (gst_mpeg2subt_init) 
	(gst_mpeg2subt_finalize, gst_mpeg2subt_chain_video) 
	(gst_mpeg2subt_event_video, gst_mpeg2subt_update) 
	(gst_mpeg2subt_update_still_frame, gst_mpeg2subt_chain_subtitle) 
	(gst_mpeg2subt_event_subtitle, gst_mpeg2subt_flush_subtitle): 
	Lock when entering any of the external extry points, and release
	it temporarily for pushing to the pipeline. This should fix the
	crashes caused by improper mutual exclusion while accesing the
	internal data stuctures.

2005-12-19  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/mpeg2sub/gstmpeg2subt.h: 
	* gst-plugins/mpeg2sub/gstmpeg2subt.c (gst_mpeg2subt_init) 
	(gst_mpeg2subt_finalize, gst_mpeg2subt_update) 
	(gst_mpeg2subt_chain_subtitle, gst_mpeg2subt_flush_subtitle): 
	Add a lock to protect mpeg2subt's internal data structures from
	concurrent access.

2005-12-19  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/manager.py (Manager.__slots__): Added vobuReadReturn
	and flushing.

	(Manager.__init__, Manager.vobuRead, Manager.busMsgReceived) 
	(Manager.runInteractive, Manager.playVobu, Manager.cancelVobu) 
	(Manager.resendSubpictureClut, Manager.flush) 
	(Manager.eos): Implement flushing by seeking, as suggested by Wim
	Taymans. The flush operation (running from the streaming thread)
	posts a message to the bus that instructs the application thread
	to do a flushing seek. The current implementation actually ignores
	the seek position.
	(Manager.stillFrame): Send an actual still frame event, so that
	dvddemux can send an EOS down the audio pipeline. Otherwise the
	pipeline blocks when an still frame directly follows a flush,
	because it is not possible to preroll without audio.

	* src/machine/machine.py (CellPlayer.playFromVobu): Return the
	still frame command before pausing for a still frame.

	* src/player/pipeline.py (SoftwareVideo.__init__): Add a
	three-frame queue before the videosink. This queue helps
	preventing deadlocks caused by still frame updates happening
	before preroll.

2005-12-18  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/mpeg2sub/gstmpeg2subt.c (gst_mpeg2subt_getcaps) 
	(gst_mpeg2subt_setcaps, gst_mpeg2subt_chain_video) 
	(gst_mpeg2subt_event_video, gst_mpeg2subt_src_event) 
	(gst_mpeg2subt_next_block, gst_draw_rle_line) 
	(gst_mpeg2subt_merge_title, gst_mpeg2subt_update_still_frame) 
	(gst_mpeg2subt_chain_subtitle, gst_mpeg2subt_event_subtitle) 
	(gst_mpeg2subt_handle_dvd_event):
	Make it compile with strict warnings. Check the return values of
	gst_pad_push and gst_pad_push_event and pass them around as
	necessary.

	* gst-plugins/robustclock:
	* src/wrapclock:
	* src/Makefile.am (SUBDIRS): 
	* gst-plugins/Makefile.am (SUBDIRS): 
	Erased. Not necessary anymore with GStreamer 0.10.

	* src/dvdread/Makefile.am (AM_CFLAGS): 
	* gst-plugins/mpeg2sub/Makefile.am (libgstmpeg2subt_la_CFLAGS): 
	* gst-plugins/iec958/Makefile.am (libiec958_la_CFLAGS): 
	* gst-plugins/dvdblock/Makefile.am (libdvdblock_la_CFLAGS): 
	* gst-plugins/capspipe/Makefile.am (libcapspipe_la_CFLAGS): 
	* gst-plugins/alsaspdif/Makefile.am (libalsaspdif_la_CFLAGS): 
	Use AM_CFLAGS properly all around.

	* configure.ac (CFLAGS, AM_CFLAGS): Define properly.

2005-12-18  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/pipeline.py (SoftwareAudio.__init__) 
	(SoftwareVideo.__init__): Guarantee that the queues can hold a
	complete second of material.

2005-12-18  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/dvdblock/dvdblocksrc.h: 
	* gst-plugins/dvdblock/dvdblocksrc.c: 
	(dvdblocksrc_class_init, dvdblocksrc_init) 
	(dvdblocksrc_set_property, dvdblocksrc_get_property) 
	(dvdblocksrc_create): 
	Re-add the cancel-vobu property for canceling the playback of the
	current VOBU. This time, it is thread safe.

2005-12-18  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/dvdblock/dvdblocksrc.c: 
	(dvdblocksrc_class_init, dvdblocksrc_init) 
	(dvdblocksrc_is_seekable, dvdblocksrc_do_seek): Add basic seeking
	functionality by firing a signal when a seek is requested. The
	success/failure status of the seek operation cannot still be
	returned from the signal, since a custom marshaler is needed for
	that purpose.

2005-12-14  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/pipeline.py (SoftwareVideo.__init__): Increase video
	queue size.

2005-12-13  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/pipeline.py (SoftwareVideo.__init__): Remove the
	subtitle queue, since subtitle playback stops after the first
	subtitle when it is there.

2005-12-13  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/pipeline.py (SoftwareVideo.__init__): 
	Move queueing back in the video pipeline, so that there's no
	buffering between subtitle decoding and video playback. This is
	necessary for instant highlight changes.
	* src/player/events.py (createCustom, highlight): 
	* gst-plugins/mpeg2sub/gstmpeg2subt.c (gst_mpeg2subt_event_video) 
	(gst_mpeg2subt_event_subtitle):
	Send highlight changes as out-of-band. Must still be perfected
	because certain highlight changes are synchronous.

2005-12-13  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/manager.py (Manager.vobuRead): Add a loop that waits
	until a command sets a new VOBU, instead of just returning when no
	VOBU is set. Previously this job was done by the dvdblocksrc
	element. This change makes still frames work again.

2005-12-13  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/mpeg2sub/gstmpeg2subt.c (gst_mpeg2subt_init) 
	(gst_mpeg2subt_getcaps): Rename getcaps_video to getcaps and adapt
	it to 0.10.

2005-12-13  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/pipeline.py (SoftwareVideo.__init__) 
	(Pipeline.__init__): Add a subtitle decoder to the pipeline.

2005-12-13  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/mpeg2sub/gstmpeg2subt.c
	(gst_mpeg2subt_handle_dvd_event): Adapt to 0.10.
	(gst_mpeg2subt_event_subtitle, gst_mpeg2subt_event_video): Don't
	handle newsegment events in a special way.

2005-12-12  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/mpeg2sub/gstmpeg2subt.c: Use GST_BOILERPLATE.
	(gst_mpeg2subt_init, gst_mpeg2subt_chain_video) 
	(gst_mpeg2subt_event_video): Split handle_video into a chain and
	an event function for the video pad.
	(gst_mpeg2subt_setcaps, gst_mpeg2subt_init):
	Rename from gst_mpeg2subt_link_video and
	adapt to 0.10.
	(gst_mpeg2subt_init, gst_mpeg2subt_chain_subtitle) 
	(gst_mpeg2subt_event_subtitle): Split handle_subtitle into a chain
	and an event function for the subtitle pad.
	(gst_mpeg2subt_loop): Erase.

2005-12-09  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/loadplugins.py: Reenable loadplugins.py.

2005-12-09  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/events.py (flush_start, flush_stop): Define instead
	of the old flush.

	* src/player/manager.py (Manager.cancelVobu): Disable for the
	moment since current dvdblock is not able to cancel VOBU
	playback.
	(Manager.cancelVobu): Send flush start and stop events.

	* src/videowidget.py (VideoWidget.__slots__) 
	(VideoWidget.setOverlay, VideoWidget.prepareWindowCb): Store
	pipeline and use it to remove the handler after it is used.

2005-12-09  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/pipeline.py (Pipeline.syncHandler): Make generic
	handler robust against exceptions.

2005-12-09  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/Makefile.am: 
	* gst-plugins/a52dec:
	* configure.ac:
	Erase fork of A52 plugin. Clean up make stuff accordingly.

2005-12-09  Martin Soto  <martinsoto@users.sourceforge.net>
 
	* src/seamless.py (main): 
	--pixel-aspect now takes a fraction in GStreamer format as value.

	* src/videowidget.py (VideoWidget.__slots__) 
	(VideoWidget.__init__, VideoWidget.setOverlay) 
	(VideoWidget.getOverlay, VideoWidget.presetAspectRatio) 
	(resizeVideo, desiredSizeChanged, VideoWidget.prepareWindowCb) 
	(VideoWidget.sizeAllocateCb, VideoWidget.destroyCb) 
	(VideoWidget.destroyCb, VideoWidget.backgroundRealizeCb) 
	(VideoWidget.videoEventFilterCb): 
	* src/seamless.py (main): 
	* src/player/pipeline.py (SoftwareVideo.__init__): 
	* src/mainui.py (MainUserInterface.__init__) 
	(MainUserInterface.videoReady): 
	Revamp VideoWidget for Gstreamer 0.10: - Get rid of aspect ratio
	handling, since the video sink does it now. - Set window id in
	video sink using synchronous bus message. - Rename
	set/getVideoSink to set/getOverlay. - Call the "ready" signal from
	realize.

2005-12-09  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/pipeline.py (Pipeline.syncHandler): Fix invocation of
	registered handlers.

2005-12-08  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/queue, gst-plugins/mpegstream: Delete old forks of
	GStreamer elements. Fixes 0.10 are now in GStreamer CVS.

2005-12-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/manager.py (Manager.__slots__, Manager.__init__) 
	(Manager.sendEvent): Get rid of hack to keep events
	referenced. Alredy fixed in gst-python.

2005-12-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/pipeline.py (Pipeline.__slots__, Pipeline.__init__) 
	(Pipeline.syncHandler, Pipeline.addSyncBusHandler) 
	(Pipeline.removeSyncBusHandler): Add a simple system to register
	synchronous bus message handlers with the pipeline.

2005-12-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/pipeline.py: Adapt pipeline.py to the extent
	necessary to achieve basic playback. File still under
	construction.

2005-12-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/manager.py (Manager.__init__, Manager.sendEvent): Add
	a hack to keep events referenced until gst_pad_push_event in
	gst-python gets fixed.

2005-12-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/manager.py (interactiveOp, synchronized): Set the
	wrapper names to be the same of the wrapped functions.
	(Manager.__init__, Manager.sendEvent, Manager.vobuRead) 
	(Manager.vobuHeader): Port to GStreamer 0.10. Get rid of immediate
	and queued events, since 0.10 don't require this.
	(Manager.vobuHeader): Instead of sending nav events, keep
	current segment information and send appropriate newsegment
	events.

2005-12-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/loadplugins.py: Deactivate plugin manual loading (not
	necessary in 0.10)
	* src/videowidget.py (VideoWidget.videoEventFilter): Don't
	register the VideoWidget as GType.
	* src/seamless.py: Require GStreamer 0.10.
	(main): Don't set the scheduler anymore. For the moment, don't
	create the graphical interface.

2005-12-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/events.py (createCustom, audio, eos, filler, flush) 
	(newsegment, highlight, nav, stillFrame, subpictureClut) 
	(subpicture, subpictureHide, subpictureShow): Update to GStreamer
	0.10.

2005-12-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/debug.py (enterLeave.wrapper): New debug function to log
	arbitrary procedure invocations.

2005-12-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/dvdblock/dvdblocksrc.c: Use the right base class in
	BOILERPLATE macro.
	(dvdblocksrc_create): Initialize buf to NULL.

2005-12-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* configure.ac (plugindir): Bump GStreamer version requirement to
	0.10.

2005-11-08  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/dvdblock/dvdblocksrc.h: Fix parent class.
	* gst-plugins/dvdblock/dvdblocksrc.c (dvdblocksrc_class_init):
	Set set un get_property before initialiting properties.
	* gst-plugins/dvdblock/Makefile.am (libdvdblock_la_CFLAGS) 
	(libdvdblock_la_LIBADD): Add GStreamer base library flags.
	* configure.ac: Add check for GStreamer base libs.

2005-11-08  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/dvdblock/dvdblocksrc.c: Port to 0.9 by deriving from
	GstPushSrc (not yet tested).
	* gst-plugins/Makefile.am (#SUBDIRS): Deactivate compilation of
	most plugins for gradual porting.
	* configure.ac: Bump GStreamer dependency to 0.9, and fix
	GStreamer check.

2005-06-23  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/sig.py: Add copyright notice.

	* src/player/pipeline.py (SoftwareVideo.__init__): Use the new
	name ffmpegcolorspace instead of the old name, ffcolorspace.

	* src/Makefile.am (pypkg_PYTHON): Add sig.py.

	* configure.ac (AC_INIT): Set version number to
	0.1.0.
	(AC_OUTPUT): Remove spurious entry.

	* config/seamless.tmpl: Move the #! line to the beginning of the
	file.

2005-06-19  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/seamless.py (main): Add a new option --pixel-aspect to allow
	specifying the pixel aspect ratio.

	* src/mainui.py (MainUserInterface.__init__): Set the pixel aspect
	ratio in the video widget.

	* src/videowidget.py (VideoWidget.__init__) 
	(VideoWidget.setPixelAspect, VideoWidget.resizeVideo): Add support
	for pixel aspect ratios different from 1.

	* src/player/pipeline.py (SpdifAudio.__init__): Actually use the
	specified spdifCard value specified.

2005-06-19  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/seamless.py (DictOptions): New class to wrap the options in
	an object that also provides dictionary behavior.
	(main): --audio-decode option replaced by --spdif-card, allowing
	to specifiy the alsa card name for the SP/DIf
	output. --video-decode option erased. Hardware video decoding
	could be re-added in the future in some other way.

	* src/player/pipeline.py: Complete revamp. New class for bins
	created from pipeline specs. Define separate classes for the audio
	and video pipelines. The software and hardware decoded pipelines
	have separate classes and the hardware pipeline uses alsasink. The
	video runs the videsink in a separate thread which fixes uneven
	playback problems in certain situations.  Initial software
	decoding support for DTS (not functional in most DVDs though).

	* src/lirc.py (LIRC.readData): Don't print commands.

	* gst-plugins/robustclock/robustclock.c (MAX_STALLED): Increase
	the maximum acceptable stalled time.
	(MAX_BACKWARDS, gst_robust_clock_get_internal_time): Accept
	situations in which the clock goes back a short
	interval. Compensating for that causes incorrect playback.

2005-06-14  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/mpegstream/gstmpegstream.c: Adjust plugin definition
	for local use.

	* gst-plugins/mpegstream/gstrfc2250enc.c
	(gst_rfc2250_enc_plugin_init): Rename element for local use.

	* gst-plugins/mpegstream/gstmpegparse.c
	(gst_mpeg_parse_plugin_init): Rename element for local use.

	* gst-plugins/mpegstream/gstmpegdemux.c
	(gst_mpeg_demux_plugin_init): Rename element for local use.

	* gst-plugins/mpegstream/gstdvddemux.c
	(gst_dvd_demux_handle_dvd_event): Only process events with the
	right MIME type.
	(gst_dvd_demux_get_audio_stream): Stream objects were being
	reallocated, but the (potentially new) pointer wasn't being stored
	in the array again. Make sure to always store the pointer after
	reallocation.
	(gst_dvd_demux_plugin_init): Rename element for local use.

2005-06-14  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/capspipe/capsaggreg.c: 
	* gst-plugins/capspipe/capsaggreg.h: 
	* gst-plugins/capspipe/capsselect.c: 
	* gst-plugins/capspipe/capsselect.h: 
	Make these two really work. Negotiation now works properly in both
	elements. Capsaggreg is now loop based. Both elements communicate
	now using a simple protocol based on "ANY" events, that guarantees
	that when a capsselect element changes to another source, the
	corresponding capsaggreg reads all material from the previous sink
	before moving to the new sink.

	* gst-plugins/robustclock/robustclock.h:
	* gst-plugins/robustclock/robustclock.c:
	(gst_robust_clock_new, gst_robust_clock_get_internal_time): Well,
	the robust clock wasn't that robust after all. The new, improved
	algorithm kicks in much more realibly when the underlying clock
	stalls (now animated menus without sound, like in the German Buena
	Vista Social Club DVD play smoothly) and guarantees (this time
	really) that the clock never, ever goes back or stops running for
	any longer than a 10th of a second.

	* src/mainui.py: Erase spurious import.

2005-06-05  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (VirtualMachine.setTimedJump): Print
	error to stderr.
	(CommandBlockPlayer.playButtonCmd): Don't print the dissasembled
	button command.
	(CommandBlockPlayer.goto): Don't print disassembled commands.

2005-06-05  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/player.py (DVDPlayer.setAudioStream) 
	(DVDPlayer.getAudioStreams, DVDPlayer.nextAudioStream): Support
	for moving to the next audio stream adapted from old player
	implementation.

	* src/machine/machine.py (VirtualMachine.currentAudioStream) 
	(VirtualMachine.setAudioStream, VirtualMachine.getAudioStreams):
	Support for externally getting a setting the current audio stream
	adapted from old machine implementation.

2005-06-05  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/debug.py (debugConsole): Fix references to the player
	related objects. They were still pointing to teh old player
	structure.

2005-06-05  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/sig.py (Signal.connect): Add an optional parameter to allow
	for registering handlers that don't receive the originating object
	as parameter.

	* src/mainui.py (MainUserInterface.__init__): Preset the aspect
	ratio in the video widget when the player changes it.

	* src/player/player.py (DVDPlayer.__init__) 
	(DVDPlayer.aspectRatioChanged): Proxy the aspectRatioChanged
	signal in the manager.

	* src/player/manager.py (Manager.setAspectRatio) 
	(Manager.aspectRatioChanged): Emit a signal when aspect ratio is
	changed by the machine.

	* src/videowidget.py (VideoWidget.__init__) 
	(VideoWidget.presetAspectRatio, VideoWidget.desiredSizeChanged):
	Add support for preseting an aspect ratio that will be used
	instead of that specified by the MPEG video stream. Necessary
	since some DVD MPEG streams specify a wrong aspect ratio, often
	that of the actual film (without the black bands) an not that of
	the encoded video.

2005-06-02  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/sig.py: New file.

2005-05-26  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/player/__init__.py:
	* src/seamless.py: 
	* src/player/player.py: 
	* src/player/pipeline.py: 
	* src/player/manager.py: 
	* src/mainui.py: 
	* src/machine/machine.py: 
	* src/machine/__init__.py: 
	* src/machine/Makefile.am (pypkg_PYTHON): 
	* src/Makefile.am (pypkg_PYTHON): 
	* configure.ac: 
	The big player refactoring:
	
	- Move the player control functionality to a new 'player' module.
	
	- Shuffle module and class names to better match their
	  functionality: Pipeline -> Manager, DVDPlayer -> Pipeline, Shell
	  -> DVDPlayer.

	- Class functionality is now more clearly defined: 
	  Pipeline: create and manage the GStreamer pipeline.
	  Manager: manage the interaction between virtual machine and
	  pipeline.
	  DVDPlayer: Offer a unified interface to the interactive player
	  functionality.

	- Clean up the way objects are instanciated and passed to other
	objects.

	- Concentrate all interactive operations in the single DVDPlayer
	class.

2005-05-25  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/pipelinecmds.py (SetAspectRatio): New method.

	* src/machine/pipeline.py (Pipeline.setAspectRatio): New method.

	* src/machine/machine.py (VirtualMachine.updateAspectRatio): New
	method.
	(ProgramChainPlayer.playProgramChain,
	VirtualMachine.wrapCallOperation): Update the aspect ratio
	information.

2005-05-25  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/decode.py (CommandDecoder.perform3): callFirstPlay
	and callTitleMenu were being called with a spurious parameter,
	which, of course, caused a crash. It is increibled how many DVDs
	worked properly despite of this! The DVD spec is really, really
	bloated.

2005-05-24  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/dvdblock/dvdblocksrc.c (dvdblocksrc_loop): Erase
	pending cancel requests when a VOBU is completed. Otherwise the
	cancel request cancels the next VOBU, causing undesired effects
	with some disks.

2005-05-22  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/dvdplayer.py (DVDPlayer.__init__): Use the forked
	seamless-a52dec element.

	* gst-plugins/a52dec/gsta52dec.c (gst_a52dec_change_state):
	Requeste DOLBY surround sound. This makes the decoder library
	downmix to surround.
	(plugin_init): Initialize the forked plugin properly.

	* m4/Makefile.am (EXTRA_DIST): 
	* gst-plugins/Makefile.am (A52DEC_DIR): 
	* configure.ac: 
	* gst-plugins/a52dec/Makefile.am:
	* m4/.arch-ids/a52.m4.id:
	Make the a52dec code compile.

2005-05-22  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (ProgramChainPlayer.linkCell): Properly
	handle the case where the cell number is out of range. Introduced
	while correcting angle playback.

2005-05-22  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/pipelinecmds.py (AcceptVobu): Define as a real class
	instead of an alias of DoNothing.

	* src/machine/pipeline.py (Pipeline.vobuHeader)
	(Pipeline.cancelVobu): Use the new cancle-vobu property in the
	source.

	* gst-plugins/dvdblock/dvdblocksrc.h: 
	* gst-plugins/dvdblock/dvdblocksrc.c (dvdblocksrc_class_init)
	(dvdblocksrc_init, dvdblocksrc_set_property)
	(dvdblocksrc_get_property, dvdblocksrc_loop): Add new property
	cancel-vobu that, when set to TRUE, stops the reading of the
	current VOBU. This replaces the old trick of setting block_count
	to 0, which, under certain conditions could cause an infinite
	loop. Property block-count completely eliminated.

2005-05-21  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/mainui.py (MainUserInterface.mainKeyPress): Activate the
	debug console by pressing F12.

	* src/debug.py: New module providing a simple interactive
	debugging console that gives access to the interpreter during the
	program execution.

2005-05-21  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (VirtualMachine.__init__): Initialize
	the subpicture register with value 0 (stream 0, hidden) instead of
	62 (no stream selected). Fixes specials menu not showing a
	highlight in Lola Rennt.

2005-05-19  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (ProgramChainPlayer.linkCell): Fix crash
	when there is an angle block at the end of the program chain.

2005-05-19  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/pipelinecmds.py (SetSubpicture): Add parameter
	'hide' to SetSubpicture operation.

	* src/machine/pipeline.py (Pipeline.__slots__): New attribute
	subpicture hide. Indicates if the current subpicture stream is
	hidden.
	(Pipeline.__init__, Pipeline.setSubpicture): Send
	subpictureHide/Show events after setting a subpicture stream.

	* src/machine/machine.py (VirtualMachine.updateSubpicture): 
	Send hide subpicture information.

	* src/machine/events.py (subpictureHide, subpictureShow): New
	events.

	* gst-plugins/mpeg2sub/gstmpeg2subt.h: 
	* gst-plugins/mpeg2sub/gstmpeg2subt.c (gst_mpeg2subt_init) 
	(gst_mpeg2subt_handle_video, gst_mpeg2subt_handle_dvd_event): 
	Add support for hidden subpicture streams that are only shown with
	forced display.

2005-05-17  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/mpeg2sub/gstmpeg2subt.h: 
	* gst-plugins/mpeg2sub/gstmpeg2subt.c: 
	Big restructuring to execute SPU commands at their prescribed
	time. Should enable subtitle animations up to some extent, and
	generally make subtitle playback more correct. Probably unstable
	and buggy in this first incarnation though.

2005-05-16  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/pipeline.py (Pipeline.__slots__): New attribute
	interactiveCount.
	(Pipeline.__init__, Pipeline.collectCmds) 
	(Pipeline.EndInteractive, Pipeline.runInteractive): Put a
	consecutive in every EndInteractive marker, and check it while
	collecting commands. Fixes a bug the prevented necessary flushing
	in some rare situations where DVD call and resume operations were
	used.

2005-05-15  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/mainui.py (MainUserInterface.mainKeyPress): 
	* src/machine/shell.py (MachineShell.nextAngle): 
	Allow for changing angles from the user interface.

	* src/machine/machine.py (VirtualMachine.__init__) 
	(VirtualMachine.setAngle, VirtualMachine.currentAngle) 
	(VirtualMachine.currentAngleCount, ProgramChainPlayer.linkCell):
	Restrict values of the angle register to the 1-9 range.
	(VirtualMachine.currentAngle, VirtualMachine.currentAngleCount):
	New methods.
	(CellPlayer.getNextPointer)
	(CellPlayer.seekToSector, CellPlayer.playFromVobu): Move the
	code used to find the next VOBU to a separate method.

	* src/dvdread/_dvdread.pyx (VideoTitle.angleCount): New property.

2005-05-15  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (VirtualMachine.callMenu) 
	(VirtualMachine.getSystem4, VirtualMachine.getSystem5): Use the
	new VideoTitle attribute names.

	* src/dvdread/_dvdread.pyx (VideoTitle): Create VideoTitles out of
	the video manager instead of based on a given title set. This
	makes the video title information from the video manager available
	from a video title object.
	(VideoTitleSet.getVideoTitle, VideoManager.getVideoTitle): Adapt
	to the new VideoTitle design.
	(VideoManager.findVideoTitle): Erased.

2005-05-14  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/dvdread/_dvdread.pyx (ProgramChain.init): Take interleaved
	blocks into account while calculating cell initial time.

2005-05-13  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/shell.py (MachineShell.seekToPositionRelative):
	Check for the case that the current position is None.

	* src/machine/pipelinecmds.py (AcceptVobu): Was acceptVobu.

	* src/machine/pipeline.py (Pipeline.playVobu) 
	(Pipeline.vobuHeader): Hold the lock between the time the source
	element is programmed to read a VOBU and the time it sends the
	header back. An interactive operation being activated in this
	interval can cause problems.

	* src/machine/machine.py (CellPlayer.seekToSector): New procedure
	to seek to a sector taking seamless angles into account.
	(CellPlayer.playFromVobu): Use AcceptVobu instead of acceptVobu.

	* src/dvdread/_dvdread.pyx (getBidiPointer): New function to get
	bidirectional pointers from the data structure.
	(getNonSeamlessNextVobu, getSeamlessNextInterleavedUnitSize): Use
	getBidiPointer.

2005-05-12  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (CellPlayer.playFromVobu): Use the new
	convention (None) to check for the end of a cell.
	(VirtualMachine.__init__): Start with angle 0.

	* src/dvdread/_dvdread.pyx (getSimplePointer, NavPacket.nextVobu,
	(NavPacket.prevVobu, NavPacket.nextVideoVobu,
	(NavPacket.prevVideoVobu): Return None to indicate end of linked
	list.
	(NavPacket.preInterleaved, NavPacket.interleaved)
	(NavPacket.unitStart, NavPacket.unitEnd): New properties to
	replace the old seamlessFlags.
	(NavPacket.getSeamlessNextInterleavedUnit)
	(NavPacket.getSeamlessNextInterleavedUnitSize): Renamed from
	getSeamlessNextVOBU and getSeamlessNextSize, that were just plain
	wrong names for these properties.

2005-05-10  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (VirtualMachine.setCurrentNav): Not an
	iterator anymore.
	(CellPlayer.playFromVobu): Send an acceptVobu command after
	playVobu.

	* src/machine/pipeline.py (Pipeline.vobuHeader): Require playback
	of VOBUs to be confirmed or canceled with an additional command
	after a PlayVobu is sent.
	(Pipeline.EndInteractive): Implement in terms of DoNothing.
	(Pipeline.cancelVobu): Renamed from stop source.

	* src/machine/pipelinecmds.py (DoNothing, CancelVobu)
	(acceptVobu): New commands.

2005-05-08  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (VirtualMachine.setAngle): Actually set
	the angle attribute.
	(ProgramChainPlayer.linkCell): Take angles into account while
	deciding which cell to play next.

2005-05-08  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/lirc.py: Add import for traceback module.

2005-05-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (ProgramChainPlayer.linkCell): Make
	method robust against out of range cell values. Fixes playback of
	"Die fabelhafte Welt von Amelie".

2005-05-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (VirtualMachine.currentTitleSet) 
	(TitlePlayer.currentTitleSet, DiscPlayer.currentTitleSet): New
	state retrieval operation.
	(DiscPlayer.currentLangUnit, LangUnitPlayer.currentLangUnit) 
	(VirtualMachine.currentLangUnit): New
	state retrieval operation.
	(TitlePlayer.currentVideoAttributes) 
	(VirtualMachine.currentVideoAttributes) 
	(TitlePlayer.currentVideoAttributes) 
	(VirtualMachine.updateSubpicture): New operation to retrieve the
	current video attributes. Use it to fix a bug that made
	updateSubpicture fail under some conditions.
	(VirtualMachine.updateAudio, VirtualMachine.updateSubpicture)
	(CellPlayer.playCell, VirtualMachine.inMenu, DiscPlayer.inMenu)
	(TitlePlayer.inMenu, LangUnitPlayer.inMenu): New way to determine
	if we are in the menu domain.
	(DiscPlayer): Add fallback implementations of all state retrieval
	operations.

2005-05-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/mpeg2sub/gstmpeg2subt.h: 
	* gst-plugins/mpeg2sub/gstmpeg2subt.c (RLE_state)
	(gst_mpeg2subt_parse_header, gst_mpeg2subt_setup_palette) 
	(gst_mpeg2subt_setup_highlight_palette, gst_draw_rle_line) 
	(gst_mpeg2subt_merge_title, gst_mpeg2subt_handle_dvd_event): 

	Fix big bug in the subtitle decoder. The assumption was that menu
	highlights are only clip regions that limit the display of a
	subtitle to a particular region. Not so. Actually, what a menu
	highlight does is displaying a region of the subpicture with a
	different palette, namely that provided by the particular DVD
	button. This allows for effects like obscuring everything with a
	subpicture, *except* for the highlight (you use a transparent
	palette for the highlight in this case.)

	The current implementation leaves a lot of room for optimization,
	but seems to be behaving correctly.

2005-05-03  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (VirtualMachine.clearNavState): New
	method.
	(ProgramChainPlayer.linkCell): Clear the navigation state when
	jumping. This fixes a bug with button auto selection,
	that was affecting "A Bug's Life" (German Edition).

2005-05-03  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (VirtualMachine.getButtonObj) 
	(VirtualMachine.updateHighlight): Properly Invoke getButton.

	* src/dvdread/nav_types.pyx: Fix comments.

	* src/dvdread/_dvdread.pyx (CELL_BLOCK_MODE_ANGLE_LAST): Fix name
	spelling.
	(NavPacket.getButton): Implement support for button groups. A new
	parameter is necessary now, to specify the typoe of button group.

2005-05-03  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (VirtualMachine.updateSubpicture):
	Restructure implementation. Fixes selection of the physical stream
	while in a menu.

2005-05-02  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/dvdplayer.py (DVDPlayer.backward10, DVDPlayer.forward10):
	Fixed to use seekToPositionRelative.

	* src/machine/shell.py (MachineShell.getCurrentTime) 
	(MachineShell.canPositionSeek, MachineShell.seekToPosition) 
	(MachineShell.seekToPositionRelative): Implemented.

	* src/machine/machine.py (CellPlayer.playCell): Add a sectorNr
	parameter.
	(ProgramChainPlayer.linkCell, ProgramChainPlayer.seekToPosition)
	(VirtualMachine.getCurrentTime, VirtualMachine.canPositionSeek)
	(VirtualMachine.seekToPosition): New methods.

2005-05-01  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (ProgramChainPlayer.hasTimeMap): New
	method.

2005-05-01  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/pipeline.py (Pipeline.sendEvent): Renamed from
	queueEvent.
	(Pipeline.vobuRead): Eliminate unnecessary code.

2005-05-01  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/shell.py: Use the new interactiveOp
	decorator. Eliminate all traces of manual pipeline flushing.

	* src/machine/pipelinecmds.py: Reimplement using actual classes
	with callable objects.

	* src/machine/pipeline.py (interactiveOp): New decorator for
	interactive operations. Replaces the old shell.entryPoint.
	(Pipeline): Add documentation all around.
	(Pipeline.__slots__, Pipeline.__init__): New attributes
	pendingCmds and immmeadiate to manage automatic flushing.
	(Pipeline.queueEvent): Soport an immediate and a queued mode for
	sending events.
	(Pipeline.collectCmds): New method to collect commands from the
	machine before executing them.
	(Pipeline.vobuRead): Adapt implementation to use collectCmds.
	(Pipeline.Defer, Pipeline.deferToken, Pipeline.defer): Delete.
	(Pipeline.runInteractive): Renamed from runEntryPoint and adapted
	to use collectCmds.

	* src/machine/machine.py (call): Renamed to callIterator.

2005-04-24  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (VirtualMachine.buttonCommand): Implement
	correctly: don not use a restart operation.
	(VirtualMachine.wrapCallOperation): Use linkCell to jump to the
	return cell.
	(ProgramChainPlayer.buttonCommand): Deleted.

2005-04-24  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/itersched.py (ExecutionError, Scheduler.next): Add
	support for carrying the traceback produced beyond the scheduler.
	(Scheduler.restart): Reimplement to avoid destroying the stack if
	the restart method is not found. This way a proper stack trace
	will be produced if a restart fails.

2005-04-24  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (VirtualMachine.setCurrentNav): Do not
	update the highlight here.
	(VirtualMachine.setButtonNav): New method to set the button nav
	packet and update the state as necessary.
	(TitlePlayer.linkProgramChain): Fix the method used to find the
	program chain.

	* src/machine/pipeline.py (Pipeline.vobuHeader): Update the
	button nav packet as well.
	(Pipeline.updateNav): New method.

	* src/machine/machine.py (VirtualMachine.__slots__): New attribute
	buttonNav.
	(VirtualMachine.setButtonNav): New method.
	(VirtualMachine.wrapCallOperation): Save buttonNav as well while
	performing a call.
	(VirtualMachine.getButtonObj, VirtualMachine.updateHighlight): Use
	buttonNav instead of currentNav.

	* src/machine/shell.py (MachineShell.selectButtonInteractive): Add
	autoAction support.

	* src/machine/pipeline.py (Pipeline.flush): Reset the highlight
	state after a flush.

	* src/machine/machine.py (VirtualMachine.selectButton): Update the
	highlight from select button.

2005-04-24  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/itersched.py (ExecutionError): New exception class
	to allow for reporting errors with tracebacks.
	(Scheduler.next): Trap exceptions and encapsulate them in
	ExecutionError objects, including a current traceback.
	(Scheduler.traceback): New method.
	(__all__): Export ExecutionError.

2005-04-24  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/pipeline.py: 
	* src/machine/events.py: 
	Eliminate 'Event' at the end of most names.

	* src/machine/pipeline.py (Pipeline.defer): Operation moved to use
	command objects. The machines, as well as the entry points, are
	expected to return only command objects that can be run on the
	pipeline.

	Added a whole set of pipeline control operations. The object keeps
	track of the internal pipeline state and tries not to send
	unnecessary events.

	* src/machine/pipelinecmds.py: Renamed from pipelineops. Add
	factory methods for all pipeline oprations.

	* src/machine/machine.py (VirtualMachine.wrapCallOperation) 
	(VirtualMachine.updateAudio, VirtualMachine.updateSubpicture) 
	(VirtualMachine.updateHighlight, CellPlayer.playFromVobu): Use
	the command objects from pipelinecmds.

2005-04-23  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/pipeline.py (Pipeline.flush): 
	* src/machine/machine.py (VirtualMachine.wrapCallOperation) 
	(ProgramChainPlayer.playProgramChain): Update the calls to
	events.subpictureClutEvent.

	* src/dvdread/_dvdread.pyx (ProgramChain.clut): Change the way to
	access the color lookup table: Now there's a clut property whose
	value is a 16 position python array.

	* src/machine/pipeline.py (Pipeline.vobuHeader): Call
	events.navEvent properly.

	* src/machine/events.py (navEvent): Receive start and end times
	instead of nav packet.

	* src/machine/pipeline.py (Pipeline.vobuRead):
	(Pipeline.vobuRead): Use events.fillerEvent() and
	events.eosEvent().

	* src/machine/machine.py (VirtualMachine.updateHighlight): Move
	code from events, that decides which type of event to send.

	* src/machine/events.py (eosEvent, fillerEvent): New functions.
	(highlightEvent, highlightResetEvent): Use separate functions for
	highlight and highlight reset events. Simplify functions to just
	create the events.

2005-04-23  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/pipelineops.py: 
	* src/machine/pipeline.py: 
	* src/machine/shell.py: 
	* src/machine/machine.py: 
	Large reorganization. Break up the big machine module into a
	machine module, only concerned with generating an abstract
	sequence of instructions for the pipeline, a pipeline module, that
	is responsible for the interaction with the GStreamer pipeline,
	and a shell module, that provides the facade for interactive
	operations.

	* src/dvdplayer.py (DVDPlayer.__init__): Now use a MachineShell.
	(DVDPlayer): Rename machine to shell.

	* src/machine/itersched.py (Scheduler.__init__, Scheduler.call) 
	(Scheduler.chain): Call 'iter' on the passed objects.

2005-04-17  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (PerformMachine.wrapCallOperation):
	Update the pipeline.
	(PerformMachine.updateSubpicture): Invoke getAttributeContainer
	correctly.
	(VirtualMachine.defer): New method. The defer token is now hidden.
	(VirtualMachine.flush): New method.
	(VirtualMachine.prevProgram, VirtualMachine.nextProgram): React
	properly when the beginning or the end of the program chain have
	been reached.
	(VirtualMachine.stop, VirtualMachine.prevProgram) 
	(VirtualMachine.nextProgram, VirtualMachine.up) 
	(VirtualMachine.down, VirtualMachine.left, VirtualMachine.right) 
	(VirtualMachine.confirm, VirtualMachine.menu): Adapted to use the
	new methods.

	* src/machine/itersched.py (Scheduler.restartable): restartable
	must also take the current into account.

2005-04-17  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (callOperation.wrapper) 
	(PerformMachine.wrapCallOperation, PerformMachine.callFirstPlay) 
	(PerformMachine.callTitleMenu) 
	(PerformMachine.callManagerProgramChain, PerformMachine.callMenu):
	Refactor call operations to concentrate state saving and restoring
	code in a single method. Nav packet must be saved and restored.
	(DiscPlayer.exit): Propagate exit command when exit is trapped by
	a called DiscPlayer.
	(ProgramChainPlayer.buttonCommand): New method.
	(CommandBlockPlayer.playButtonCmd): New method.
	(Defer, entryPoint, VirtualMachine.runEntryPoint): New approach to
	implementing entry points. The entry point is run in a separate
	scheduler, but if it returns the 'Defer' object, execution is
	moved to the main scheduler.
	(VirtualMachine.stop, VirtualMachine.prevProgram) 
	(VirtualMachine.nextProgram, VirtualMachine.up) 
	(VirtualMachine.down, VirtualMachine.left, VirtualMachine.right) 
	(VirtualMachine.confirm, VirtualMachine.menu): Now work properly
	(next and prevProgram don't do proper bounds check.)

	* src/machine/itersched.py (Scheduler.call, Scheduler.chain):
	Allow for absorbing schedulers when they are called or chained by
	other scheduler.

	* src/machine/events.py (flushEvent): New procedure.

	* src/machine/decode.py (CommandDecoder.perform3): rtn parameter
	to call operations is now mandatory.

2005-04-16  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (makeDummyOperation): Erased.
	(PerformMachine.getAttributeContainer): Fixed access to objects in
	dvdread module.
	(PerformMachine.updateHighlight): New procedure.
	(PerformMachine.getButtonObj): New procedure.
	(entryInstant, VirtualMachine.runInstant): Add a decorator and
	method to run entry points in "instant mode", i.e. they run in a
	separate itersched and their results (onyl events) are immediately
	sent down the pipeline.
	(CellPlayer.playFromVobu, VirtualMachine.vobuHeader): vobuHeader
	works now as an instant entry point. Highlight update moved from
	the cell player.
	(VirtualMachine.selectButtonInteractive): New method.
	(VirtualMachine.up, VirtualMachine.down, VirtualMachine.left) 
	(VirtualMachine.right): Implemented.

2005-04-15  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (PerformMachine.updateAudio): 
	(PerformMachine.updateSubpicture): New methods.

	* src/machine/decode.py (CommandDecoder.performLink): Issue the
	performButton operations before the link operations. Otherwise the
	button changes get lost.

2005-04-14  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (ProgramChainPlayer.playProgramChain):
	Add CLUT update.
	(PerformMachine.finishCallOp): New method implement de common part
	of call operations.
	(PerformMachine.callMenu, PerformMachine.callManagerProgramChain) 
	(PerformMachine.callTitleMenu, PerformMachine.callFirstPlay): Use
	finishCallOp.
	(PerformMachine.__init__): Erase pipeline state.
	(PerformMachine.selectButton, PerformMachine.setSystemParam8):
	Implemented.

2005-04-13  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (VirtualMachine.vobuHeader): Send
	navigation events.
	(PerformMachine.setAudio): Method implemented.

	* src/machine/events.py (mpegTimeToGstTime): Moved from
	machine.py.

	* src/machine/machine.py (VirtualMachine.vobuHeader): Erased.
	(PerformMachine.__slots__, PerformMachine.__init__): New attribute
	currentNav to make the current navigation packet accessible to the
	whole set of execution objects.
	(CellPlayer.selectButton, CellPlayer.setSystemParam8) 
	(CellPlayer.setAngle, CellPlayer.setAudio) 
	(CellPlayer.setSubpicture, CellPlayer.setKaraokeMode): Erased.
	(CellPlayer.playVobu): Renamed to playFromVobu
	(CellPlayer.setNav): Mixed with playFromVobu.
	(MachineStill): New class.
	(PerformMachine.callMenu, PerformMachine.getSystem4): Use
	currentTitle instead of getTitle.
	(CellPlayer.__slots__): Get rid of nav attribute.
	(VirtualMachine.vobuRead): Properly handle pausing the pipeline.
	(VirtualMachine): Get rid of synchronization in many methods (will
	be readded in some form).
	(VirtualMachine.__init__, VirtualMachine.wrapHeader): Renamed to
	vobuHeader.

2005-04-10  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py: Many dummy operations made active.
	(PerformMachine.callFirstPlay, PerformMachine.callTitleMenu)
	(PerformMachine.callManagerProgramChain, PerformMachine.callMenu):
	Implemented.
	(DiscPlayer.__init__): Add callOp parameter, and document
	function.
	(DiscPlayer.resume): If a resume happens without a matching call
	operation just restart playback.
	(ProgramChainPlayer.linkCell): Call linkTailProgramChain properly.
	(VirtualMachine.__init__): Start playing the first program chain.

2005-03-28  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (CellPlayer.setNav): nextVOBU ->
	nextVobu.
	(PerformMachine.__slots__): New attribute 'info'.
	(TitlePlayer): Renamed from TitleSetPlayer. Methods implemented.
	(TitlePlayer.currentTitle): New method.
	(ProgramChainPlayer.playProgramChain): Added cellNr parameter to
	allow for selecting the initial cell.
	(LangUnitPlayer.__slots__): New attribute 'unit'.
	(LangUnitPlayer): Methods implemented.
	* src/dvdread/_dvdread.pyx(ProgramChain.getClutEntry,
	Cell.lastVobuStartSector, NavPacket.nextVobu, NavPacket.prevVobu,
	NavPacket.getForwardVobu, NavPacket.getBackwardVobu,
	NavPacket.nextVideoVobu, NavPacket.prevVideoVobu,
	NavPacket.getNonSeamlessNextVobu, NavPacket.getSeamlessNextVobu):
	Renamed. Use only first letter capitalized in acronyms.


2005-03-27  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (PlaybackLocation): Rewrite the whole
	class based on going down the scheduler stack looking for methods
	that provide the necessary info.
	(CellPlayer.playCell, CellPlayer.playVobu): No more fiddling with
	the machine state.
	(VirtualMachine.__slots__, VirtualMachine.__init__): New
	'location' attribute.
	(CellPlayer.currentCell, ProgramChainPlayer.currentProgramChain):
	New methods to properly handle playback location info.
	(PerformMachine.setLocation): New method.

	* src/machine/itersched.py (Scheduler.restartable): New method.

	* src/machine/machine.py (makeDummyOperation, PerformMachine):
	Operations are now dummy, i.e. they only print the
	invokation. Dummy operations will be gradually replaced by actual
	operations as the implementation progresses.
	(GeneralRegister.setValue): Is now a generator.

	* src/machine/itersched.py (RestartableIterator.__init__) 
	(restartPoint.wrapper): Added more robust error handling for cases
	where a @restartPoint method does not produce an iterator.
	(__all__): Export 'NoIterError'.

	* src/machine/machine.py (CommandBlockPlayer): Methods
	implemented.
	(ProgramChainPlayer.playProgramChain) 
	(ProgramChainPlayer.linkCell) 
	(ProgramChainPlayer.linkTailProgramChain): Actually execute
	commands.

2005-03-26  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/itersched.py (Scheduler.restart): Get rid of the
	getattr functionality. It was a bad idea after all.
	* src/machine/machine.py (PerformMachine): This class now holds
	the whole execution state. Register handling and playback location
	now part of PerformMachine objects.	
	(CellPlayer.__init__): Receive a perform machine instead of the
	complete machine object.
	(VirtualMachine): State information moved to PerformMachine.
	(ProgramChainPlayer, DiscPlayer, TitleSetPlayer, LangUnitPlayer):
	Renamed from *Navigator.
	(entryPoint): New wrapper for machine entry points.
	(ProgramChainPlayer): Methods implemented. Now it is possible to
	play complete program chains.

2005-03-25  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py: Many small bugs fixed. Playback of a
	single cell works now.
	* src/dvdplayer.py: Eliminate * imports.

2005-03-21  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (CellPlayer): Class renamed from cell
	navigator. Modified to use itersched all around.

2005-03-20  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py: Don't use "import *" for dvdread and
	gst.

	* src/machine/events.py: New module for making events.

	* src/machine/itersched.py (Scheduler.__getattr__): Added getAttr
	method to access attributes and methods in the stacked
	objects. This functionality is also accessible through
	__getattr__.

	* configure.ac: Raise required Python version to 2.4

2005-03-11  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/disassemble.py (CommandDisassembler): Machine
	functionality split to the separate class DiassembleMachine.
	(DiassembleMachine): New class.
	(disasm): Create singleton instance of Diassembler.
	(diassemble): New simpler entry point to diassemble commands.
	(__all__): Restrict module access to the disassemble operation.
	(IndentedText.reset): New method.

2005-03-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/disassemble.py: 
	* src/machine/decode.py: Converted to operate with itersched.
	* src/machine/itersched.py (checkItr): New function.
	(Call.__init__, Chain.__init__): Add calls to checkItr to check
	for proper parameters.

2005-03-06  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/itersched.py (YieldOp): Renamed from
	CallObject. Operations on the scheduler now act directly on it
	through the modifySched method. This leads to a more efficient and
	extensible design. 
	(NoOp): New (no) operation. 
	(Chain): New chaining operation to yield control to a new
	iterator. 
	(Call, Restart, Scheduler.next): Adapt to the new style of yield
	operations.
	(__all__): Restrict exported names.

2005-03-05  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/itersched.py: Enhance design again (hopefully this
	time it'll be right.) The scheduler manages a stack of objects and
	it is possible to restart an arbitrary method of one of the
	objects.

2005-02-27  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/itersched.py: Simplify design to make it more
	flexible.

2005-02-20  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/itersched.py: New iterator scheduler.

2005-02-11  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (VirtualMachine): Do not inherit from
	CommandPerformer any more.
	(VirtualMachine.__slots__): Added 'decoder', 'systemRegisters' and
	'resumeLocation'. The class worked only because it was derived
	from CommandPerformed, which had no __slots__ declaration at all.
	(VirtualMachine.__init__): Create the new command decoder. Fix
	capitalization of 'resumeLocation'.
	(VirtualMachine.Register): Inherit from decode.Register.
	(VirtualMachine.Register.__slots__): Added.
	(VirtualMachine.SystemRegister.__slots__): Added.
	(VirtualMachine.performCommand): Invoke the command decoder
	properly.

	* src/machine/disassemble.py (IndentedText.__slots__): Added.
	(CommandDisassembler.__slots__): Added.
	(CommandDisassembler.__init__): Initialize command decoder
	properly.
	(CommandDisassembler.Register): Now inherit from decode.Register
	(CommandDisassembler.Register.__slots__): Added.

	* src/machine/decode.py: Renamed from perform.py
	(CommandDecoder): Class renamed from CommandPerformed. The
	execution machine used to inherit from this class. Now the
	constructor receives a machine object as parameter and all
	operations rely on it.
	(Register): New class. Replaces the old CommandPerformer.Register.
	(CommandDecoder.__slots__): Added.
	(CommandDecoder.performLink): Call the link operations explicitly
	instead of recurring to an introspection trick.

2005-02-09  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/seamless.py: Don't select a python version number in the #!
	start line. This is only used for testing anyway.

2005-02-06  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py: Document the command execution functions
	in preparation for the split-up of the machine.

2005-01-16  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/dvdplayer.py (DVDPlayer.__init__): Use seamless-queue instead
	of the standard queue.

	* gst-plugins/queue/gstqueue.c: 
	* gst-plugins/queue/gstqueue.h: 
	* gst-plugins/Makefile.am: 
	* configure.ac: GstQueue forked from GStreamer to apply the
	controversial renegotiation patch.

2004-12-04  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/videowidget.py (VideoWidget.__init__) 
	(VideoWidget.getInvisibleCursor, VideoWidget.motionCb) 
	(VideoWidget.videoEventFilter): Hide the pointer in 5 seconds if
	it is not moved.

	* src/mainui.py (MainUserInterface.__init__): Use standard GTK
	set_events also for the video widget.

	* src/dvdplayer.py (DVDPlayer.__init__): Add audioconvert and
	audioscale only when doing soft sound decoding.

	* src/mainui.py:
	Double quuotes substituted by single quotes.
	(MainUserInterface.__init__, MainUserInterface.videoReady): Trap
	the 'ready' signal in the video widget and start the player using
	it.

	* src/videowidget.py:
	Class is now a real gobject.
	(VideoWidget.__init__, VideoWidget.resizeVideo,
	VideoWidget.videoEventFilter): 
	Added a lock to protect accesses to the video window. This will
	hopefully correct the fatal X errors people have been
	experiencing.
	(VideoWidget.videoEventFilter):
	Added a 'ready' signal, to inform when the widget is ready for
	display.
	Added a call to the expose method of the gst.xoverlay
	interface. This fixes a lot of display problems.

2004-12-03  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/dvdplayer.py (DVDPlayer.__init__): Pass the DVD device
	location to the DVD element. Thanks go to Ronald Bultje for the
	report.
	(DVDPlayer.__init__): Added audioscale and audioconvert elements
	to the audio pipeline.

2004-11-29  Martin Soto  <martinsoto@users.sourceforge.net>

	* README: Write some basic instructions.
	* src/seamless.py (main):
	* src/dvdplayer.py (DVDPlayer.__init__):
	Added clock selection via the --clockcommand line option.
	Default videosink has no options now.

	* gst-plugins/robustclock/robustclock.h: 
	* gst-plugins/robustclock/robustclock.c (gst_robust_clock_new) 
	(gst_robust_clock_get_internal_time):
	Implemented a more or less reasonable algorithm for the robust
	clock. Some preroll mechanism is still needed.

2004-11-28  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/mpeg2sub/gstmpeg2subt.c
	Turn GST_DEBUG and GST_LOG invocations into GST_DEBUG_OBJECT and
	GST_LOC_OBJECT.
	(gst_mpeg2subt_update_still_frame): Flush additional subtitles
	from queue. Fixes menu subtitles not displaying sometimes in
	stills.

	* gst-plugins/mpegstream/gstdvddemux.c
	(gst_dvd_demux_send_discont): Always send new media discont events
	to force the links to engage.

	* gst-plugins/iec958/ac3iec.c (ac3iec_handle_event): Get rid of
	stupid discont handling.

	* gst-plugins/mpegstream/gstdvddemux.c: Updated e-mail address.

	* src/seamless.py (main): Check for the PTH version of the fair
	scheduler before selecting it.

	* src/dvdplayer.py (DVDPlayer.__init__): Do not use the robust
	clock yet.

	* gst-plugins/alsaspdif/alsaspdifsink.c
	(alsaspdifsink_handle_event): 
	(alsaspdifsink_handle_event): Special handling for still frames
	deleted.

	* src/wrapclock/wrapclock.c: 
	* src/Makefile.am (SUBDIRS): 
	* configure.ac: 
	Added a C module to provide minimal access to the robust clock.

	* gst-plugins/robustclock/robustclock.c: 
	* gst-plugins/robustclock/robustclock.h: 
	* gst-plugins/Makefile.am (SUBDIRS): 
	* gst-plugins/robustclock/Makefile.am (SUBDIRS): 
	* configure.ac: 
	Added an implementation for a robust, wrapper clock, that makes
	an audio clock keep running even if no sound is being sent.

2004-11-27  Martin Soto  <martinsoto@users.sourceforge.net>

	* autogen.sh:
	* alsa.m4:
	* local-python.m4:
	* pkg.m4:
	* Makefile.am:
	Add m4 directory.

	* gst-plugins/Makefile.am: 
	* configure.ac:
	Make compiling alsaspdif depending on the availability of alsa
	libraries.

	* configure.ac:
	Don't error if Pyrex is not around.
	General clean up.

2004-11-26  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/seamless.py (main): Add new commandline options.

	* src/mainui.py (MainUserInterface.__init__): Take the options
	object directly. Make lirc optional. Set the fullscreen mode at
	the right location.

	* src/dvdplayer.py (_DVDPlayer.__init__): Build the pipeline
	somewhat more dynamically, based on command line options.

	* gst-plugins/mpegstream/gstdvddemux.c (gst_dvd_demux_init) 
	(gst_dvd_demux_handle_dvd_event, gst_dvd_demux_send_subbuffer):
	Some discont event debugging.

2004-11-24  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/machine/machine.py (VirtualMachine.vobuRead) 
	(VirtualMachine.highlightEvent): Use the new "push-event" and
	"queue-event" signals to send events.
	(VirtualMachine.vobuHeader, VirtualMachine.audioEvent) 
	(VirtualMachine.subpictureEvent): Add proper type names to
	set_value operations.

	* gst-plugins/dvdblock/dvdblocksrc.h: Add push_event signal.
	* gst-plugins/dvdblock/dvdblocksrc.c (dvdblocksrc_push_event) 
	(dvdblocksrc_class_init): New signal "push-event".
	(dvdblocksrc_queue_event): Add a ref operation to the
	"queue-event" signal.

	* gst-plugins/mpegstream/gstmpegstream.c: Local version of
	mpegstream plugin properly renamed to seamless-mpegstream.
	* gst-plugins/mpeg2sub/gstmpeg2subt.c: Local version of mpeg2sub
	plugin properly renamed to seamless-mpeg2sub.

2004-11-22  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/dvdblock/dvdblocksrc.c (dvdblocksrc_class_init):
	GstEvent and GstBuffers are boxed types, so use appropriate
	marshalers.

	* gst-plugins/mpeg2sub/gstmpeg2subt.c
	(gst_mpeg2subt_handle_video): Pass unhandled events to
	gst_pad_event_default instead of just pushing them forward. Fixed
	a bug that prevented the element from pausing on EOS.

	* src/dvdplayer.py (DVDPlayer.stop): Really wait for the pipeline
	to stop.

	* src/machine/machine.py (VirtualMachine.vobuRead, EosEvent) 
	(VirtualMachine.stop): Properly set the pipeline to EOS when
	stopping.

2004-11-21  Martin Soto  <martinsoto@users.sourceforge.net>

	* gst-plugins/mpeg2sub/gstmpeg2subt.h: 
	* gst-plugins/mpeg2sub/gstmpeg2subt.c:
	Added subtitle queueing.

2004-11-20  Martin Soto  <martinsoto@users.sourceforge.net>

	* src/mainui.py (MainUserInterface.__init__): Set initial window
	size to 75% of the root window. Set a reasonable minimum size.

	* Makefile.am (SUBDIRS): Added config directory.

	* src/dvdread/Makefile.am: Make sure .pyx files are distributed.

	* config/Makefile.am: Distribute the template files.

	* src/Makefile.am: Distribute (but not install!)
	config/__init__.py.

	* src/dvdplayer.py: Added copyright notice.
	(DVDPlayer.__init__): Changed default audio sink to alsasink.

	* config/seamless.tmpl:
	* config/config.py.tmpl:
	* src/machine/perform.py:
	* src/machine/machine.py:
	* src/machine/__init__.py:
	* src/machine/disassemble.py:
	* src/dvdread/__init__.py:
	* src/dvdread/_dvdread.pyx:
	* src/config/__init__.py:
	* src/xscreensaver.py:
	* src/videowidget.py:
	* src/seamless.py:
	* src/mainui.py:
	* src/lirc.py:
	Added copyright notice.

	* src/dvdread/nav_types.pyx:
	* src/dvdread/ifo_types.pyx:
	* gst-plugins/iec958/ac3_padder.h:
	* gst-plugins/iec958/ac3_padder.c:
	* gst-plugins/dvdblock/dvdblocksrc.c:
	* gst-plugins/dvdblock/dvdblocksrc.h:
	* gst-plugins/alsaspdif/alsaspdifsink.h:
	* gst-plugins/alsaspdif/alsaspdifsink.c:
	Update copyright notices.

	* gst-plugins/iec958/ac3iec.c:
	* gst-plugins/capspipe/capspipeinit.c:
	Change license to LGPL.

	* acinclude.m4: Added to repository.

2004-11-17  Martin Soto  <martinsoto@users.sourceforge.net>

	* General: Building system completed.
	* src/loadplugins.py (pluginList): Automatic dynamic plugin
	loaded. Some gst-plugins copied for convenience.

2004-11-07  Martin Soto  <martinsoto@users.sourceforge.net>

	* machine/machine.py: 
	Started support for angles (not complete). Event handling fixed to
	work with the fair scheduler (events can only be sent while
	handling dvdblocksrc's signals).
	* plugin/alsaspdifsink.c (alsaspdifsink_handle_event): 
	Deactivate clock during still frames and activate it again after
	flush.
	* plugin/dvdblocksrc.c: 
	* plugin/dvdblocksrc.h: 
	Added support for an event queue stored in the component.
	* dvdread/nav_types.pyx: 
	* dvdread/_dvdread.pyx:
	Added support for cell properties.
	* src/dvdplayer.py: Adapted to work with standard
	components. Dependency on the DXR3 card lifted.
	* src/seamless: Use python2.4. Added explicit gobject import.

2004-08-29  Martin Soto  <martinsoto@users.sourceforge.net>

	* dvdread/_dvdread.pyx (NavPacket): Added properties and functions
	to access angle information.
	(Cell): Added missing properties.

2004-08-04  Martin Soto  <martinsoto@users.sourceforge.net>

	* plugin/alsaspdifsink.c (alsaspdifsink_alsa_open): Set avail_min
	software parameter to a higher value. Seems to almost eliminate
	glitches in sound playback.
	* machine/machine.py (VirtualMachine.force): Hack to force a
	button in missbehaving menus.

2004-07-19  Martin Soto  <martinsoto@users.sourceforge.net>

	* configure.ac: Heavily changed based on gst-recorder.

	* plugin/__init__.py: 
	* plugin/_seamlessplugin.pyx:
	Python module to load the private plugin.

	* gst-plugins/plugininit.c: 
	* gst-plugins/plugininit.h: 
	* gst-plugins/Makefile.am: 
	* gst-plugins/dvdblocksrc.c: 
	* gst-plugins/plugininit.c:
	Plugin initialization mechanism completely revamped to allow for
	private plugin.

	* dvdread/_dvdread.pyx (VideoTitleSet.__new__): Retry opening the
	title if it fails initially.

2004-07-18  Martin Soto  <martinsoto@users.sourceforge.net>

	* machine/machine.py (VirtualMachine.updatePipeline): Add basic
	support for aspect ratios.

	* dvdread/_dvdread.pyx (VideoAttributes): Added support for
	extracting video attributes.
	(ProgramChain.getSubpicturePhysStreams): Return a tuple instead of
	a dictionary.
	(VideoTitleSet, VideoManager): Add properties to access menu
	attributes.

2004-07-14  Martin Soto  <martinsoto@users.sourceforge.net>

	* machine/machine.py (VirtualMachine.setAudioStream): Added
	support for switching audio streams.

	* dvdread/_dvdread.pyx (DVDReadError.__new__): Raise an exception
	if ifoOpen fails.

2004-07-13  Martin Soto  <martinsoto@users.sourceforge.net>

	* machine/machine.py (VirtualMachine.jumpToMenu): Add a new
	parameter for the title number, and handle the case were title set
	number is 0 (video manager).
	(PlaybackLocation): Add cellCurrentTime
	attribute and use it to handle current time.
	(VirtualMachine.setButtonNav): Make checks tighter on forced
	select/activate.

2004-07-11  Martin Soto  <martinsoto@users.sourceforge.net>

	* dvdread/_dvdread.pyx (DVDReadError.getProgramChain): Handle the
	case where the tmap table is NULL.
	(DVDReadError.preCommands, DVDReadError.postCommands,
	DVDReadError.cellCommands,): Handle the case where the command
	table is NULL.

	* machine/machine.py (VirtualMachine.wrapper): New function to
	create synchronized methods. The relevant methods are now
	synchronized.
	(PlaybackLocation.set): New method to set the location based on
	another location object.
	(VirtualMachine.resume): Fixed to use the set location method.
	(PlaybackLocation.advance): Jump to the next program chain when a
	program chain reaches its with no branching commands.

	* gst-plugins/dvdblocksrc.c (dvdblocksrc_loop): Be more strict
	with the value of block count.

	* machine/disassemble.py (CommandDisassembler): Change the
	direction of the shift operation in setSystemParam8.

	* machine/machine.py (VirtualMachine.__init__): Initialize audio
	to 0. Some DVDs seem to need it.
	(VirtualMachine.getSystem4): Fix incorrect implementation.
	(VirtualMachine.getSystem5): idem.
	(VirtualMachine.jumpToMenu): Make sure that the location points to
	a title in the specified title set.
	(VirtualMachine.setSystemParam8): Invert the direction of the
	shift.

2004-07-04  Martin Soto  <martinsoto@users.sourceforge.net>

	* machine/machine.py (disasm): audio, subpicture and angle
	attributes moved to the VirtualMachine class.
	Added attribute 'interactive' to properly deal with flushing of
	the pipeline.
	(PlaybackLocation.jumpToUnit): New operation, takes part of the
	functionality of jump.
	(VirtualMachine.updatePipeline): Be more robust when no audio
	stream is found.
	(VirtualMachine.SystemRegister.setValue): Parameter value was
	missing.

	* machine/perform.py, machine/disassemble.py: add setSystemParam8
	operation.

	* gst-plugins/Makefile.am: Fix compile flags for plugins.

	* gst-plugins/dvdblocksrc.c (dvdblocksrc_loop): Handle the case
	where a VOBU contains only the header block.

	* dvdread/_dvdread.pyx (DVDReadError.getProgramChain): Fixed
	time map retrieving. (DVDReadError.getButton): Accept only
	existing buttons.

2004-06-28  Martin Soto  <martinsoto@users.sourceforge.net>

	* ChangeLog started.


